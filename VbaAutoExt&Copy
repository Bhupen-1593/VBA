Option Explicit
Private ch As Selenium.ChromeDriver                                'this line used ch driver only in the module in which it is declared
Private Sub Workbook_Open()
Dim result As VbMsgBoxResult
result = MsgBox("Do you want to get the data from CRMS now?", vbYesNo)
If result = vbYes Then
    On Error Resume Next
    Call call_fns
    Call Data_Verification
Else
End If
End Sub    'this code promps user to select the extraction of the data from the CRMS website and then calls otheer functions
Private Sub Data_Verification()
Dim ans1 As Variant
Dim ans2 As Variant
Sheets("Generation").Select
If Range("AB1").Value = Range("AC1").Value And Range("AB1").Value = Range("AD1").Value And Range("AB1").Value = Range("AE1").Value _
And Range("AB1").Value = Range("AC1").Value Then
ans1 = MsgBox("Data is verified you can proceed", vbOKOnly)
On Error Resume Next
Call Workbook_Open_Copy1
Call Workbook_Open_Copy2
Else
ans2 = MsgBox("No. of rows of different WTGs are not equal excel will not proceed", vbOKOnly)
End If
End Sub     'this checks prior data by comparing no of rows which corresponds to date for each wind turbine, each wind turbine must have same no of data rows
Private Sub Workbook_Open_Copy1()
Dim wsdaily1 As Workbook
Dim answer1 As Variant
On Error GoTo err10041

answer1 = MsgBox("Open and copy GeeCee Generation as on" & VBA.Format(VBA.Date - 1, "dd-mm-yy"), vbYesNo)
If answer1 = vbYes Then

'here no need to define variable 'cus' (as donne in savla sub routine) direct arg of path in the bracket itself
Set wsdaily1 = Workbooks.Open(Replace(Worksheets("Custom").Range("B3").Value, "\", "/") & "gc" _
& VBA.Format(VBA.Date - 1, "dd-mm-yy"))

If Range("A2").Value <> "" And Range("A3").Value <> "" Then
    wsdaily1.Sheets(1).Range("A2", Range("A2").End(xlToRight).End(xlDown)).Copy
    ThisWorkbook.Sheets(1).Activate
    Range("A2").End(xlDown).Offset(1, 0).PasteSpecial
Else
    wsdaily1.Sheets(1).Range("A2", Range("A2").End(xlToRight)).Copy
    ThisWorkbook.Sheets(1).Activate
    Range("A2").End(xlDown).Offset(1, 0).PasteSpecial
End If

wsdaily1.Sheets(2).Activate
If Range("A2").Value <> "" And Range("A3").Value <> "" Then
    wsdaily1.Sheets(2).Range("A2", Range("A2").End(xlToRight).End(xlDown)).Copy
    ThisWorkbook.Sheets(2).Activate
    Range("A2").End(xlDown).Offset(1, 0).PasteSpecial
Else
    wsdaily1.Sheets(2).Range("A2", Range("A2").End(xlToRight)).Copy
    ThisWorkbook.Sheets(2).Activate
    Range("A2").End(xlDown).Offset(1, 0).PasteSpecial
End If

End If
err10041:
MsgBox "Check if the file is downloaded or not!"
End Sub                                             'this sub routine checks if the data file is downloaded or not then prompts the user action so that data from the file can be copied into the master data sheet

Private Sub Workbook_Open_Copy2()
Dim wsdaily2 As Workbook
Dim answer2 As Variant
Dim cus2 As String
On Error GoTo err10042

answer2 = MsgBox("Open and copy Savla Generation as on" & VBA.Format(VBA.Date - 1, "dd-mm-yy"), vbYesNo)
If answer2 = vbYes Then

cus2 = Replace(Workbooks("WTG Analysis - Copy").Worksheets("Custom").Range("B2").Value & "savt" & VBA.Format(VBA.Date - 1, "dd-mm-yy"), "\", "/")

Set wsdaily2 = Workbooks.Open(cus)


If Range("A2").Value <> "" And Range("A3").Value <> "" Then
    wsdaily2.Sheets(1).Range("A2", Range("A2").End(xlToRight).End(xlDown)).Copy
    ThisWorkbook.Sheets(1).Activate
    Range("A2").End(xlDown).Offset(1, 0).PasteSpecial
Else
    wsdaily2.Sheets(1).Range("A2", Range("A2").End(xlToRight)).Copy
    ThisWorkbook.Sheets(1).Activate
    Range("A2").End(xlDown).Offset(1, 0).PasteSpecial
End If

wsdaily2.Sheets(2).Activate
If Range("A2").Value <> "" And Range("A3").Value <> "" Then
    wsdaily2.Sheets(2).Range("A2", Range("A2").End(xlToRight).End(xlDown)).Copy
    ThisWorkbook.Sheets(2).Activate
    Range("A2").End(xlDown).Offset(1, 0).PasteSpecial
Else
    wsdaily2.Sheets(2).Range("A2", Range("A2").End(xlToRight)).Copy
    ThisWorkbook.Sheets(2).Activate
    Range("A2").End(xlDown).Offset(1, 0).PasteSpecial
End If

End If

err10042:
    MsgBox "Check if file is downloaded or not!"

End Sub                                                 'this sub routine checks if the data file is downloaded or not then prompts the user action so that data from the file can be copied into the master data sheet for other client

Private Sub testselenium()
Dim rng As Range
Dim cr_rng As Range
Dim in_date_j224 As String
Set ch = New Selenium.ChromeDriver
Dim ddl As Selenium.SelectElement
Dim dt As Selenium.WebElement
ch.SetPreference "download.default_directory", Worksheets("Custom").Range("B2").Value
ch.Start baseUrl:="https://crms.suzlon.com"
ch.Get "/"
ch.FindElementById("txtUserId").SendKeys "savla"
ch.FindElementById("txtPassword").SendKeys "Savla@123"
ch.FindElementById("img_login").Click
ch.Get "https://crms.suzlon.com/aspx/Rpt_Daily_Power_Gen.aspx"
Set ddl = ch.FindElementByName("ctl00$ContentPlaceHolder1$DDLCustomer").AsSelect
ddl.SelectByValue "CCS00067"
Set rng = Worksheets("LatestDate").Range("D3", Range("D3").End(xlDown))
Set cr_rng = Worksheets("LatestDate").Range("C3", Range("C3").End(xlDown))
in_date_j224 = Application.WorksheetFunction. _
VLookup("J224", Worksheets("LatestDate").Range("C3", Range("D3").End(xlDown)), 2)
On Error Resume Next
ch.FindElementById("ContentPlaceHolder1_imgCalFromDate", 10000).Click
ch.FindElementById("ContentPlaceHolder1_imgCalFromDate", 10000).Click
ch.FindElementByCss("div[title='" & VBA.Format(in_date_j224 + 1, "dddd, mmmm dd, yyyy") & "']", 10000).Click
ch.FindElementByCss("div[title='" & VBA.Format(in_date_j224 + 1, "dddd, mmmm dd, yyyy") & "']", 10000).Click
ch.FindElementByCss("div[title='" & VBA.Format(in_date_j224 + 1, "dddd, mmmm dd, yyyy") & "']", 10000).Click

ch.FindElementById("ContentPlaceHolder1_imgCalToDate", 5000).Click
ch.FindElementById("ContentPlaceHolder1_CalendarExtender1_today").Click
ch.FindElementById("ContentPlaceHolder1_BtnViewRpt").Click
ch.FindElementById("ContentPlaceHolder1_gvDailyGenData_lnkbtnFile_0").Click

End Sub                                                                 'this sub routine uses selenium libarary to interact with the CRMS site and extract data

Private Sub RenameTodayDownloadedFile()
    Dim objFSO As Object
    Dim objFolder As Object
    Dim objFile As Object
    Dim strFolderPath As String
    Dim strNewName As String
    Dim dtToday As Date
    
    'Folder Path
    strFolderPath = "D:\BHUPEN PCC\client data\CRMS Daily\savla\CRMS download daily\"
    
    'todays date stored in a var
    dtToday = VBA.Format(VBA.Date, "dd-mm-yy")
    
    'creating file system object for doing operations
     Set objFSO = CreateObject("Scripting.FileSystemObject")
     
    ' Getting the Folder Path
    Set objFolder = objFSO.getfolder(strFolderPath)
    
    For Each objFile In objFolder.Files
        If DateValue(objFile.DateCreated) = dtToday Then
            strNewName = "savt" & VBA.Format(VBA.Date - 1, "dd-mm-yy") & ".xls"
            objFile.Name = strNewName
            Exit For
        End If
    Next objFile
End Sub                                                                ' this subroutine renames the latest downloaded data file for further processing

Private Sub call_fns()

On Error Resume Next
Call testselenium
Application.Wait (Now + TimeValue("00:00:10"))
Call RenameTodayDownloadedFile

End Sub                                                             'sub routine calls are made in sequence first extraction then rename sub is called

Sub MyPublicSub()
    Call Workbook_Open
End Sub                                                       ' sub is made public so than the code can be assigned to a button on excel sheet





